<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一只程序喵</title>
  
  <subtitle>刘明辉的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-09T16:04:41.156Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>刘明辉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>那些既熟悉又陌生的C/C++知识点（长期更新）</title>
    <link href="http://yoursite.com/2019/08/09/%E9%82%A3%E4%BA%9B%E6%97%A2%E7%86%9F%E6%82%89%E5%8F%88%E9%99%8C%E7%94%9F%E7%9A%84C-C-%E7%9F%A5%E8%AF%86%E7%82%B9%EF%BC%88%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://yoursite.com/2019/08/09/那些既熟悉又陌生的C-C-知识点（长期更新）/</id>
    <published>2019-08-09T15:21:44.000Z</published>
    <updated>2019-08-09T16:04:41.156Z</updated>
    
    <content type="html"><![CDATA[<h2 id="头文件的等价写法"><a href="#头文件的等价写法" class="headerlink" title="头文件的等价写法"></a>头文件的等价写法</h2><p>在C++标准中，<strong>stdio.h</strong>更推荐使用等价写法：<strong>cstdio</strong>，也就是在前面加一个<code>c</code>，然后去掉<code>.h</code>即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 以下两种写法等价 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="整型变量类型表示数的范围"><a href="#整型变量类型表示数的范围" class="headerlink" title="整型变量类型表示数的范围"></a>整型变量类型表示数的范围</h2><ul><li>整型<code>int</code>：<strong>32位</strong>整数/<strong>绝对值在10^9范围以内</strong>的整数都可以定义为int型</li><li>长整型<code>long long</code>：<strong>64位</strong>整数/<strong>10^18以内（如10^10）</strong>的整数就要定义为long long型</li></ul><h2 id="long-long型的使用"><a href="#long-long型的使用" class="headerlink" title="long long型的使用"></a>long long型的使用</h2><p>long long型赋<strong>大于2^31-1</strong>的初值，需要在初值后面加上LL</p><p>经常<strong>利用typedef用LL来代替long long</strong>，以避免在程序中大量出现long long而降低编码的效率。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL; <span class="comment">//给long long起个别名LL</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL a = <span class="number">123456789012345L</span>L, b = <span class="number">234567890123456L</span>L;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, a + b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="浮点数的存储类型"><a href="#浮点数的存储类型" class="headerlink" title="浮点数的存储类型"></a>浮点数的存储类型</h2><p>对于浮点型，<strong>不要使用float，碰到浮点型的数据都应该用double来存储</strong>。</p><ul><li>单精度<code>float</code>：有效精度只有<strong>6~7位</strong></li><li>双精度<code>double</code>：有效精度有<strong>15~16位</strong></li></ul><h2 id="double型的输入输出格式"><a href="#double型的输入输出格式" class="headerlink" title="double型的输入输出格式"></a>double型的输入输出格式</h2><ul><li>输出格式：<code>%f</code>（与float型相同）</li><li>输入格式：scanf中是<code>%lf</code></li></ul><p>注：有些系统如果把输出格式写成%lf也不会出错，但尽量还是按标准来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;头文件的等价写法&quot;&gt;&lt;a href=&quot;#头文件的等价写法&quot; class=&quot;headerlink&quot; title=&quot;头文件的等价写法&quot;&gt;&lt;/a&gt;头文件的等价写法&lt;/h2&gt;&lt;p&gt;在C++标准中，&lt;strong&gt;stdio.h&lt;/strong&gt;更推荐使用等价写法：&lt;str
      
    
    </summary>
    
    
      <category term="C/C++" scheme="http://yoursite.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>deeplearning.ai学习笔记（一）深度学习引言</title>
    <link href="http://yoursite.com/2019/08/09/deeplearning-ai%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BC%95%E8%A8%80/"/>
    <id>http://yoursite.com/2019/08/09/deeplearning-ai学习笔记（一）深度学习引言/</id>
    <published>2019-08-09T06:30:38.000Z</published>
    <updated>2019-08-09T09:05:27.062Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AI is the new Electricity. ——吴恩达（<a href="https://www.coursera.org/instructor/andrewng" target="_blank" rel="noopener">Andrew Ng</a>）</p></blockquote><p>大约在一百年前，社会的电气化改变了每个主要行业。而如今我们见到了 AI令人惊讶的能量会产生同样巨大的转变。显然 AI的各个分支中，发展最为迅速的就是<strong>深度学习</strong>（deep learning）。而<strong>深度学习</strong>，一般指的是训练<strong>神经网络</strong>（有时是非常非常大/深的神经网络）。</p><a id="more"></a><h2 id="何为神经网络（What-is-a-neural-network-）"><a href="#何为神经网络（What-is-a-neural-network-）" class="headerlink" title="何为神经网络（What is a neural network?）"></a>何为神经网络（What is a <strong>neural network</strong>?）</h2><h3 id="引例：房价预测（Housing-Price-Prediction）"><a href="#引例：房价预测（Housing-Price-Prediction）" class="headerlink" title="引例：房价预测（Housing Price Prediction）"></a>引例：房价预测（Housing Price Prediction）</h3><p>如下图，对于单个因素（如房屋面积）的房屋预测，可以用ReLU函数进行拟合，相当于一个只有一个神经元的神经网络。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebRgtx.md.png" alt="ReLU函数拟合" title>                </div>                <div class="image-caption">ReLU函数拟合</div>            </figure><p>用房子的大小 x 作为神经网络的输入，它进入到这个节点(这个小圈)中 ，然后这个小圈就输出了房价 y 。所以这个小圈，也就是一个神经网络中的一个神经元，就会执行上图中画出的这个方程。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfBw9.png" alt="单个神经元的神经网络" title>                </div>                <div class="image-caption">单个神经元的神经网络</div>            </figure><p><strong>一个很大的神经网络是由许多这样的单一神经元叠加在一起组成。</strong>比如下面这个例子，我们不仅仅根据房屋大小来预测房屋价格，我们引入其他特征量。能够容纳的家庭人口也会影响房屋价格 ，这个因素其实是取决于房屋大小以及卧室的数量这两个因素决定了这个房子是否能够容纳你的家庭 。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfvwj.md.png" alt="多因素房价预测" title>                </div>                <div class="image-caption">多因素房价预测</div>            </figure><p>所以在这个例子中：</p><ul><li>x 表示所有这四个输入 (房屋大小、卧室数量、邮政编码、富裕程度)</li><li>y表示试图去预测的价格</li><li>每一个小圆圈是ReLU 函数或者别的一些非线性函数</li></ul><p>这就是最基本的神经网络。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebftzT.md.png" alt="简单神经网络" title>                </div>                <div class="image-caption">简单神经网络</div>            </figure><h2 id="深度学习：监督学习的一种（Supervised-Learning-with-Neural-Networks）"><a href="#深度学习：监督学习的一种（Supervised-Learning-with-Neural-Networks）" class="headerlink" title="深度学习：监督学习的一种（Supervised Learning with Neural Networks）"></a>深度学习：监督学习的一种（Supervised Learning with Neural Networks）</h2><h3 id="监督学习与非监督学习"><a href="#监督学习与非监督学习" class="headerlink" title="监督学习与非监督学习"></a>监督学习与非监督学习</h3><p><code>监督学习</code>：给定标记好的训练样本集，如回归问题、分类问题</p><p><code>非监督学习</code>：给定样本集，发现特征数据中的分布结构，如聚类问题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfayF.md.png" alt="监督学习" title>                </div>                <div class="image-caption">监督学习</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfdL4.md.png" alt="非监督学习" title>                </div>                <div class="image-caption">非监督学习</div>            </figure><h3 id="深度学习在监督学习中的应用-amp-常用神经网络"><a href="#深度学习在监督学习中的应用-amp-常用神经网络" class="headerlink" title="深度学习在监督学习中的应用 &amp; 常用神经网络"></a>深度学习在监督学习中的应用 &amp; 常用神经网络</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfDoR.md.png" alt="深度学习的应用" title>                </div>                <div class="image-caption">深度学习的应用</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfTYt.md.png" alt="几种常见神经网络" title>                </div>                <div class="image-caption">几种常见神经网络</div>            </figure><h3 id="结构化数据与非结构化数据"><a href="#结构化数据与非结构化数据" class="headerlink" title="结构化数据与非结构化数据"></a>结构化数据与非结构化数据</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/08/09/ebfoFI.md.png" alt="结构化数据与非结构化数据示例" title>                </div>                <div class="image-caption">结构化数据与非结构化数据示例</div>            </figure><h2 id="深度学习兴起的原因（Why-is-Deep-Learning-taking-off-）"><a href="#深度学习兴起的原因（Why-is-Deep-Learning-taking-off-）" class="headerlink" title="深度学习兴起的原因（Why is Deep Learning taking off?）"></a>深度学习兴起的原因（Why is Deep Learning taking off?）</h2><blockquote><p>Scale drives deep learning progress.——吴恩达（<a href="https://www.coursera.org/instructor/andrewng" target="_blank" rel="noopener">Andrew Ng</a>）</p></blockquote><h3 id="深度学习的性能"><a href="#深度学习的性能" class="headerlink" title="深度学习的性能"></a>深度学习的性能</h3><ul><li>x-axis is the amount of data （数据量）</li><li>y-axis (vertical axis) is the performance of the algorithm. （算法性能）</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://d3c33hcgiwev3.cloudfront.net/imageAssetProxy.v1/JP--G3ooEeeJIwrF5BVsIg_b60d752c05bec0881d8ca08cfc2646d2_Screen-Shot-2017-08-05-at-2.30.09-PM.png?expiry=1565481600000&hmac=I-FnXoQoONjGN17_lNuk7vXj7BK4h_mP1txu2K-Y830" alt="数据量与算法性能关系" title>                </div>                <div class="image-caption">数据量与算法性能关系</div>            </figure><ul><li>当数据量比较少时，深度学习方法性能不一定优于经典机器学习方法。</li><li>通过增加数据量和神经网络规模可提升深度学习方法的性能。</li></ul><h3 id="深度学习兴起的原因"><a href="#深度学习兴起的原因" class="headerlink" title="深度学习兴起的原因"></a>深度学习兴起的原因</h3><ul><li>Data：信息化社会产生了巨大的数据量</li><li>Computation：现代计算机计算性能的极大提升（GPU与CPU）</li><li>Algorithms：算法的优化进一步提升了性能（如ReLU的使用）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;AI is the new Electricity. ——吴恩达（&lt;a href=&quot;https://www.coursera.org/instructor/andrewng&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Andrew Ng&lt;/a&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大约在一百年前，社会的电气化改变了每个主要行业。而如今我们见到了 AI令人惊讶的能量会产生同样巨大的转变。显然 AI的各个分支中，发展最为迅速的就是&lt;strong&gt;深度学习&lt;/strong&gt;（deep learning）。而&lt;strong&gt;深度学习&lt;/strong&gt;，一般指的是训练&lt;strong&gt;神经网络&lt;/strong&gt;（有时是非常非常大/深的神经网络）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="deeplearning.ai" scheme="http://yoursite.com/tags/deeplearning-ai/"/>
    
  </entry>
  
</feed>
